# В google colab добавить: !pip install pyTelegramBotAPI
# Чтобы добавить новое слово — нужно его прописать в объект DEFINITOINS на 13 строчке
# Важно все новые аббривиатуры в коде писать только с маленьких букв
# Пользователь в телеграм может писать и с большой и с маленькой — код всегда приводит к строчным

from telebot import TeleBot, types

bot = TeleBot(token='5896838914:AAEMphkFZ4cP-bo63AkOF2V3d80dIhwyy5Q', parse_mode='html') # создание бота

# словарь с определениями и аббревиатурами, которые знает бот
# в формате:
# 'ключевая фраза': 'соответствующее ей определение'
DEFINITOINS = {
    'регресс': 'Проверить что новый функционал не сломал существующий',
    'Бэкапить': '(от англ. "back up") — сохранять резервную копию. Бэкапить информацию надо как можно чаще, чтобы была возможность вернуть удаленные данные, или сохранить проделанную работу, если произойдет системный сбой.',
    'Бэклог': 'список функций в порядке приоритета для реализации в следующих версиях продуктов.',
    'Индусский код': 'код, написанный длинно и витиевато',
    'Костыль': 'криво, но быстро реализованное решение проблемы в коде. Временная мера, которая поддерживает программу в рабочем состоянии, пока айтишники работают над трудоемким решением',
    'Крипово': 'страшно',
    'Разраб': 'сокращение от разработчик',
    'Спринт': 'отрезок времени, забег, за который команда разработчиков добавляет продукту новые функции',
    'Сейвить': 'сохранить изменения',
    'Таски': 'задачи',
    'Факап': 'провал задачи, важного дела',
    'Фича': 'особенность, фишка продукта',
    'Хард скиллы': 'технические навыки.',
    'Чекнуть': 'проверить',
    'Шерить': 'предоставлять доступ к каким-либо данным',
    'Айдишник': 'id, идентификатор.',
    'Апишка': 'API, программный интерфейс приложения или интерфейс прикладного программирования',
    'Апрув': 'Одобрение, одобрить, утвердить.',
    'Аутсорс': 'аутсорсинг, передача компанией части операционной деятельности другой компании',
    'Баг': 'Ошибка в программе',
    'Бета': 'бета-версия, приложение на стадии публичного тестирования.',
    'Бот': 'Ботом называют программу, которая автоматизирует интерфейс',
    'Бэкенд': 'Программно-аппаратная или серверная часть приложения',
    'Ворнинг': 'предупреждение. Предупреждающее сообщение в интерфейсе.',
    'Выкатить': 'сделать доступным для пользователей',
    'Выпадашка': 'выпадающее меню, то же, что и «дропдаун',
    'Гит': 'система контроля версий Git или сервис GitHub.',
    'Градиент': 'плавный переход из одного цвета в другой.',
    'Грумить': 'Приводить в порядок, «причесывать',
    'Движок': 'в веб-разработке так называют системы управления контентом',
    'деплоить': 'развёртывание, публикация рабочей версии приложения. Пример: задеплоить сайт — перенести сайт с тестового на рабочий сервер, сделать его доступным для пользователей.',
    'Дебажить ': 'устранять ошибки, баги.',
    'Джун': 'Младший разработчик. Специалист без опыта или с минимальным опытом работы.',
    'Дезигнер': 'презрительно-снисходительное название дизайнера',
    'Докеризировать': 'завернуть приложение в докер (платформу для разработки, доставки и запуска контейнерных приложений).',
    'Драй': 'don’t repeat yourself. Принцип программирования, предлагающий избегать повторений кода.',
    'Дропдаун': 'выпадающее меню, то же, что и «выпадашка».',
    'Дропнуть': 'от англ. Drop. Удалить, отключить, сбросить или обнулить что-либо',
    'Жаба': 'язык программирования Java',
    'Залить': 'загрузить. Например, «залить файлы на сервер».',
    'Запилить': 'сделать что-то, добавить какую-то функциональность',
    'Змея': 'язык программирования Python',
    'Исходник': 'файлы, в которых находится исходный код приложения, или сам исходный код',
    'Итерация': 'повторение. «Мы сделали несколько итераций» — мы повторили шаг несколько раз.',
    'Колл': 'Созвон, онлайн-конференция, онлайн-совещание.',
    'Коммит': 'коммитить — от англ. To commit — совершать. В контексте работы над приложением — сохранять код в репозитории.',
    'Копипаста': 'Скопированный откуда-то код.',
    'Конфа': ' конференция.',
    'Легаси': 'Морально устаревший код, который не обновляется, но используется. Или код, который разработчик получил по наследству от предыдущих разработчиков.',
    'Линтер': 'общее нарицательное название программ, которые анализируют код и предупреждают разработчика об ошибках.',
    'Либа ': 'библиотека. Речь идет о библиотеках кода, например, React.',
    'Локалка': 'локальный. Например, локальный сервер или сеть.',
    'Мидл': 'средний. Уровень разработчика, следующий за джуниором. Опыт и уровень знаний миддла позволяет ему самостоятельно решать серьезные задачи.',
    'Мёржить': 'сливать. Речь идет об объединении или слиянии веток кода',
    'Меншить': 'упоминание. Упоминанать в чатах или соцсетях. «Менши меня, когда будет готово» значит «упомяни меня, когда будет готово».',
    'Навбар': 'навигационный блок на сайте или в интерфейсе программы',
    'Накатить': 'внести изменения, задеплоить новую версию приложения. Противоположное термину «откатить».',
    'Опенсорс': 'программное обеспечение с открытым исходным кодом',
    'Откатить ': 'удалить изменения, вернуть предыдущую версию приложения. Противоположное термину «накатить».',
    'Ось': 'операционная система.',
    'Падаван': 'ироничное название стажера или джуниора',
    'Пилот': 'пробная (пилотная) версия продукта.',
    'Питон': 'язык программирования Python.',
    'Подвал': 'то же, что и «футер». Элемент структуры страницы, который находится в нижней части и содержит служебную информацию — контакты, ссылки на соцсети, публичная оферта и т. д.',
    'Поплыла вёрстка': 'некорректное отображение страницы в браузере.',
    'Продакшн': 'обозначение кода для рабочей версии приложения.',
    'Пушить': 'использовать команду push, публиковать что-то',
    'Пэхапэ': 'язык программирования PHP, то же, что и «пыха».',
    'Пыха': 'язык программирования PHP, то же, что и «пэхапэ»',
    'Рекурсия': 'описание процесса с помощью самого процесса. Например, выражение «рекурсивный вызов функции» описывает ситуацию, в которой функция вызывает сама себя.',
    'Релиз ': 'программное обеспечение на стадии публичного использования. Стабильная версия программы, которая прошла тестирование.',
    'Релокация': 'перевод сотрудника или бизнеса в другое место внутри страны или за границу.',
    'Репа': 'репозиторий, хранилище данных. Например, код программы можно хранить в репозитории на GitHub.',
    'Репозиторий': 'хранилище данных. Например, код программы можно хранить в репозитории на GitHub.',
    'Ридми': 'файл Readme, в котором содержится информация о программе',
    'Ругаться': 'например, линтер ругается — сообщения об ошибках в коде, работе сервиса и так далее.',
    'Сабж': 'от английского Subject — тема, предмет. «По сабжу» — по теме обсуждения.',
    'Свичнуть': 'переключить. От английского switch',
    'Свитчнуть': 'свичнуть — переключить. От английского switch.',
    'Сетка': 'модульная сетка, используется для дизайна и верстки страниц',
    'Сеньор': 'старший разработчик.',
    'Слетело': 'сломалось',
    'Снести': 'удалить',
    'Стек': 'изначально абстрактный тип данных. В разговорной речи используется для обозначения списка технологий, которые использует разработчик или компания. Пример: «Наш стек — HTML/CSS, JavaScript, React».',
    'Софт': ' от англ. Software — программное обеспечение.',
    'Софт-скиллы': 'от англ. Soft skills — знания и качества специалиста, прямо не связанные с профессиональной деятельностью. Примеры: коммуникабельность, проактивность.',
    'Тачка': 'компьютер',
    'Темплейт': 'от английского Template — шаблон.',
    'Тестировщик': 'специалист по тестированию программного обеспечения.',
    'Тимлид': 'от английского Team Lead — руководитель команды. Координатор группы программистов.',
    'Фидбек': ' от англ. Feedback — обратная связь.',
    'Фиксить': 'пофиксить — от англ. Fix. Чинить, починить, исправить.',
    'Фреймворк': 'от англ. Framework — каркас. Инструмент разработки, набор типовых шаблонных решений, упрощающих работу программиста. Примеры: Laravel, Bootstrap.',
    'Фронтенд': 'от англ. Front-end — клиентская часть приложения.',
    'Хардкодить': 'статически прописывать в коде данные, которые должны вычисляться динамически. Плохая практика, антипаттерн в программировании.',
    'Хедер': 'элемент структуры веб-страницы, находится в верхней части и содержит логотип, меню, служебную информацию.',
    'Хотфикс': 'от англ. Hotfix. Срочное исправление критических ошибок, уязвимостей или недоработок в программе.',
    'CMS': ' Content Management System, система управления контентом.',
    'CSS': 'Cascading Style Sheets, каскадные таблицы стилей.',
    'Чекать': 'от англ. Check. Проверять, проверить.',
    'Юзать': 'от английского To use — использовать.',
    'Митинг': 'собрание, на котором обсуждается, что успели или не успели сделать сотрудники, а также чем они будут заниматься в новом спринте',
    'Скрам': 'метод управления проектами. Относится к гибкой методологии разработки эджайл (англ. agile — гибкий).',
    'Валидация': 'проверка данных, которые вводит пользователь.',
    'Фубар': 'Foo и Bar — имена функций или переменных, по которым невозможно понять, зачем они нужны. Использование таких имён допускают в учебниках и документации, но не в реальных проектах, потому что они замедляют чтение и понимание кода другими программистами.',
    'Код ревью': ' проверка кода',
    'Ревью': ' проверка кода',
    'Гитхаб': 'сервис для хранения репозиториев IT-проектов и совместной работы над ними.',
    'Кранчи': 'вынужденные переработки, вызванные плохим менеджментом или различными непредвиденными обстоятельствами',
    'Лаг': 'задержка в работе приложения, из-за которой оно какое-то время не отвечает на действия пользователя.',
    'Нативное приложение': 'программа, разработанная под конкретную платформу с учетом ее требований.',
    'Парсить': 'собирать и систематизировать данные с помощью специальной программы, парсера.',
    'Патч ': 'обновление, которое исправляет ошибки и прочие технические проблемы продукта.',
    'Пет-проект': 'проект, которым программист занимается для себя в свободное время. Например, для портфолио, прокачки навыков или просто для удовольствия.',
    'Прошивка': 'версия программного обеспечения, которое управляет устройством',
    'Редирект': 'автоматическое перенаправление пользователя с одного URL на другой. Используется, к примеру, чтобы помочь посетителю сайта найти переехавшую на другой адрес страницу',
    'Релиз': 'версия продукта на стадии публичного использования.',
    'Релокейт': 'переезд сотрудника на новое место жительства в связи с профессиональными обязанностями.',
    'Сниппет': '(от англ. snippet) — фрагмент текста или кода.',
    'Тултип': 'подсказка, которая всплывает после наведения или нажатия на элемент интерфейса либо контент.',
    'Хостить': 'размещать сайт на сервере',
    'Юзабилити': '(от англ. usability) — показатель удобства продукта для конечного пользователя.',
    
}

# обработчик команды '/start'
@bot.message_handler(commands=['start'])
def start_command_handler(message: types.Message):
    # отправляем ответ на команду '/start'
    bot.send_message(
        chat_id=message.chat.id, # id чата, в который необходимо направить сообщение
        text='Привет! Я помогу тебе расшифровать сложные аббревиатуры и термины 🤓\nВведи интересующий термин, например, регресс', # текст сообщения
    )

# обработчик всех остальных сообщений
@bot.message_handler()
def message_handler(message: types.Message):
    # пробуем найти ключевую фразу в словаре
    definition = DEFINITOINS.get(
        message.text.lower(), # приводим текст сообщения к нижнему регистру
    )
    # если фразы нет в словаре, то переменная definition будет иметь значение None
    # проверяем это условие
    if definition is None:
        # если ключевая фраза не была найдена в словаре
        # отправляем ответ
        bot.send_message(
            chat_id=message.chat.id,
            text='😋 Я пока не знаю такого определения',
        )
        # выходим из функции
        return
    
    # если ключевая фраза была найдена, формируем текст сообщения и отправляем его
    # если перед строкой поставить букву f, то в фигурных скобках {} можно использовать переменные :)
    bot.send_message(
        chat_id=message.chat.id,
        text=f'Определение:\n<code>{definition}</code>',
    )

    bot.send_message(
        chat_id=message.chat.id,
        text=f'Жду следующий термин',
    )


# главная функция программы
def main():
    # запускаем нашего бота
    bot.infinity_polling()


if __name__ == '__main__':
    main()
